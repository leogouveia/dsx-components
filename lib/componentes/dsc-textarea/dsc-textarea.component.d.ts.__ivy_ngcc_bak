import { ElementRef, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { ControlValueAccessor, NgControl } from '@angular/forms';
import { tamanhoTextAreaType } from '../../types/textAreaTypes';
import { TamanhoTextAreaEnum } from '../../enum/textAreaEnums';
export declare class DscTextareaComponent implements OnInit, OnChanges, ControlValueAccessor {
    controlDir: NgControl;
    dscRotulo: string;
    dscRotulo_: string;
    dscInformacaoAdicional: string;
    dscInformacaoAdicional_: string;
    dscPlaceholder: string;
    dscPlaceholder_: string;
    dscTamanhoTextarea: tamanhoTextAreaType;
    dscTamanhoTextarea_: TamanhoTextAreaEnum;
    dscIconeInformativo?: string;
    dscIconeInformativo_?: string;
    dscTamanhoMaximo?: number;
    dscTamanhoMaximo_: number;
    dscTextoFeedback?: string;
    dscTextoFeedback_?: string;
    dscIsContadorCaractere?: boolean;
    dscIsContadorCaractere_: boolean;
    dscTextoComplementar?: string;
    dscTextoComplementar_?: string;
    textarea: ElementRef;
    mapaTamanhoTextarea: Map<TamanhoTextAreaEnum, string>;
    mapaHeader: Map<TamanhoTextAreaEnum, string>;
    classeHeader: string;
    classeBox: string;
    classFormField: string;
    disabled: boolean;
    onChange: (_value: any) => void;
    onTouched: () => void;
    constructor(controlDir: NgControl);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    registerOnChange(fn: (value: any) => void): void;
    setDisabledState(disabled: boolean): void;
    writeValue(value: any): void;
    registerOnTouched(fn: () => void): void;
    private tratarClassesDinamicas;
    private preencherMapaTamanhoTextarea;
    private preencherMapaHeader;
    isInvalid(): boolean;
}
